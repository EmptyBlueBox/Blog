---
import PageLayout from '@/layouts/CommonPage.astro'

import { Comment } from '@/components/advanced'
import PublicationEntry from '@/components/projects/PublicationEntry.astro'

export const prerender = true

const headings = [
  {
    depth: 2,
    slug: 'publications',
    text: 'Publications'
  },
  {
    depth: 2,
    slug: 'research',
    text: 'Research Projects'
  },
  {
    depth: 2,
    slug: 'other',
    text: 'Personal Interest'
  },
  {
    depth: 2,
    slug: 'learnings',
    text: 'Self Learning'
  }
]

const publicationsData = [
  // {
  //   name: 'DexterCap: An Affordable and Automated System for Capturing Dexterous Hand-Object Manipulation',
  //   authors:
  //     '<br /><b>Yutong Liang</b>*, Shiyi Xu*, Yulong Zhang*, Bowen Zhan, He Zhang, Libin Liu',
  //   venue: 'SIGGRAPH Asia',
  //   year: '2025',
  //   image: 'DexterCap/DexterCap.png',
  //   links: [
  //     { type: 'site', href: '/projects/DexterCap' },
  //     { type: 'github', href: 'https://github.com/PKU-MoCCA/hand-mocap' },
  //     { type: 'release', href: 'https://huggingface.co/datasets/pku-mocca/DexterHand/' }
  //   ],
  //   details: `DexterCap is an affordable motion capture system designed to record complex hand-object interactions. We built a low-cost hardware setup and developed specialized algorithms to capture fine-grained hand movements even when fingers are heavily occluded. The system automatically processes and refines the captured data, creating the DexterHand dataset which includes detailed recordings of dexterous manipulations like solving a Rubik's cube.`,
  //   detailsTitle: 'Details: DexterCap'
  // },
  {
    name: 'ROBOVERSE: Towards a Unified Platform, Dataset and Benchmark for Scalable and Generalizable Robot Learning',
    authors:
      'Haoran Geng*, Feishi Wang*, Songlin Wei*, Yulong Li*, Bangjun Wang*, Boshi An*, Charlie Tianyue Cheng*, Haozhe Lou, Peihao Li, Yen-Jen Wang, <b>Yutong Liang</b>, Dylan Goetting, Chaoyi Xu, Haozhe Chen, Yuxi Qian, Yiran Geng, Jiageng Mao, Weikang Wan, Mingtong Zhang, Jiangran Lyu, Siheng Zhao, Jiazhao Zhang, Jialiang Zhang, Chengyang Zhao, Haoran Lu, Yufei Ding, Ran Gong, Yuran Wang, Yuxuan Kuang, Ruihai Wu, Baoxiong Jia, Carlo Sferrazza, Hao Dong, Siyuan Huang, Koushil Sreenath, Yue Wang†, Jitendra Malik†, Pieter Abbeel†',
    venue: 'Robotics: Science and Systems (RSS)',
    year: '2025',
    image: 'roboverse.jpg',
    links: [
      { type: 'site', href: 'https://roboverseorg.github.io' },
      { type: 'github', href: 'https://github.com/RoboVerseOrg/RoboVerse' },
      { type: 'arxiv', href: 'https://arxiv.org/abs/2504.18904' }
    ],
    details: `RoboVerse is a unified simulation platform for robot learning that integrates multiple simulators, provides high-quality synthetic datasets, and establishes standardized benchmarks. The platform features MetaSim - a universal interface that abstracts different simulation environments, enabling seamless transitions between simulators. It includes photorealistic datasets with high-fidelity physics and comprehensive benchmarks for imitation learning and reinforcement learning across various generalization levels.`,
    detailsTitle: 'Technical Description',
    authorsCollapsed: true,
    detailsCollapsed: false
  },
  {
    name: 'SimiSketch: A Sketching Algorithm for Similarity Estimation',
    authors:
      '<br />Fenghao Dong, <b>Yutong Liang</b>*, Yang He*, Zirui Liu, Yuhan Wu, Peiqing Chen, and Tong Yang',
    venue: 'arXiv preprint 2405.19711',
    year: '2024',
    image: 'simisketch.png',
    links: [
      { type: 'github', href: 'https://github.com/SimiSketch/SimiSketch' },
      { type: 'arxiv', href: 'https://arxiv.org/abs/2405.19711' }
    ],
    details: `SimiSketch is a fast sketching algorithm for estimating similarity between sets. It achieves up to 42 times better accuracy and 360 times higher throughput compared to existing methods, making it suitable for large-scale applications like network traffic analysis and text processing.`,
    detailsTitle: 'Technical Description',
    detailsCollapsed: false
  }
]

const otherResearchProjectsData = [
  {
    name: 'PhyMANO',
    authors: '',
    venue: '',
    year: '',
    image: 'phymano.png',
    links: [{ type: 'github', href: 'https://github.com/EmptyBlueBox/PhyMANO' }],
    details: 'Simulate MANO in physics simulators.',
    detailsTitle: 'Technical Description'
  },
  {
    name: 'Motion Matching on AMASS',
    authors: '',
    venue: '',
    year: '',
    image: 'motion_matching.png',
    links: [
      { type: 'github', href: 'https://github.com/EmptyBlueBox/MotionMatching' },
      { type: 'video', href: 'https://youtu.be/DhTEMzsdJdA' }
    ],
    details: 'A motion matching project on AMASS dataset.',
    detailsTitle: 'Technical Description'
  },
  {
    name: 'Motion Guided Layout Design',
    authors: '',
    venue: '',
    year: '',
    image: 'layout_pipeline.png',
    links: [
      { type: 'github', href: 'https://github.com/EmptyBlueBox/layout_design' },
      { type: 'video', href: 'https://youtu.be/5CHdcELwdmM' }
    ],
    details: 'Integrate human motion into indoor layout design for better navigation and comfort.',
    detailsTitle: 'Technical Description',
    detailsCollapsed: false
  }
]

const personalInterestProjectsData = [
  {
    name: 'PKU Treehole Starred Saver',
    authors: '',
    venue: '',
    year: '',
    image: 'pku.png',
    links: [
      { type: 'site', href: '/projects/treehole' },
      { type: 'github', href: 'https://github.com/EmptyBlueBox/PKU_Treehole_Starred_Saver' }
    ],
    details: 'Save your starred posts in Peking University Treehole.',
    detailsTitle: 'Details: PKU Treehole Starred Saver'
  },
  {
    name: 'Typst Thesis Template',
    authors: '',
    venue: '',
    year: '',
    image: 'pku.png',
    links: [
      { type: 'github', href: 'https://github.com/EmptyBlueBox/PKU_Undergraduate_Thesis_Template' }
    ],
    details: 'Peking University Undergraduate Thesis Template in Typst.',
    detailsTitle: 'Details: Typst Thesis Template'
  },
  {
    name: 'IDV Evaluation',
    authors: '',
    venue: '',
    year: '',
    image: 'idv.jpg',
    links: [{ type: 'github', href: 'https://github.com/EmptyBlueBox/IDV_Evaluation' }],
    details: 'Evaluate Account Value for NetEase Game: Identity V.',
    detailsTitle: 'Details: IDV Evaluation'
  },
  {
    name: 'Course2Note',
    authors: '',
    venue: '',
    year: '',
    links: [{ type: 'github', href: 'https://github.com/EmptyBlueBox/Course2Note' }],
    details: 'Convert course playbacks into comprehensive notes or cleaned transcripts.',
    detailsTitle: 'Details: Course2Note'
  },
  {
    name: 'My Course Review',
    authors: '',
    venue: '',
    year: '',
    image: 'pku_scene.jpeg',
    links: [{ type: 'site', href: '/blog/course_review-zh' }],
    details: 'Helpful Course Information for PKU Students.',
    detailsTitle: 'Details: My Course Review'
  },
  {
    name: 'My Website',
    authors: '',
    venue: '',
    year: '',
    image: '',
    links: [
      { type: 'site', href: '/' },
      { type: 'github', href: 'https://github.com/EmptyBlueBox/Blog' }
    ],
    details: 'My personal website built with Astro, a.k.a. this website.',
    detailsTitle: 'Details: My Website'
  }
]

const selfLearningProjectsData = [
  {
    name: 'Learning Rust',
    authors: '',
    venue: '',
    year: '',
    image: 'rust.png',
    links: [{ type: 'github', href: 'https://github.com/EmptyBlueBox/Learning_Rust' }],
    details: 'Some notes and code about Rust.',
    detailsTitle: 'Details: Learning Rust'
  },
  {
    name: 'Learning RL',
    authors: '',
    venue: '',
    year: '',
    image: 'isaacsim.png',
    links: [{ type: 'github', href: 'https://github.com/EmptyBlueBox/Learning_RL' }],
    details: 'Some notes and code about reinforcement learning.',
    detailsTitle: 'Details: Learning RL'
  }
]
---

<PageLayout title='Projects' headings={headings} info='/projects'>
  <h2 id='publications' class='mt-8'>Publications</h2>
  <div class='grid grid-cols-1 gap-4'>
    {
      publicationsData.map((pub) => (
        <PublicationEntry
          name={pub.name}
          authors={pub.authors}
          venue={pub.venue}
          year={pub.year}
          image={pub.image}
          links={pub.links}
          details={pub.details}
          detailsTitle={pub.detailsTitle}
          authorsCollapsed={pub.authorsCollapsed}
          detailsCollapsed={pub.detailsCollapsed}
        />
      ))
    }
  </div>

  <h2 id='research' class='mt-8'>Research Projects</h2>
  <div class='grid grid-cols-1 gap-4 md:grid-cols-2'>
    {
      otherResearchProjectsData.map((item) => (
        <PublicationEntry
          name={item.name}
          authors={item.authors}
          venue={item.venue}
          year={item.year}
          image={item.image}
          links={item.links}
          details={item.details}
          detailsTitle={item.detailsTitle}
          detailsCollapsed={item.detailsCollapsed}
        />
      ))
    }
  </div>

  <h2 id='other' class='mt-8'>Personal Interest</h2>
  <div class='grid grid-cols-1 gap-4 md:grid-cols-2'>
    {
      personalInterestProjectsData.map((item) => (
        <PublicationEntry
          name={item.name}
          authors={item.authors}
          venue={item.venue}
          year={item.year}
          image={item.image}
          links={item.links}
          details={item.details}
          detailsTitle={item.detailsTitle}
        />
      ))
    }
  </div>

  <h2 id='learnings' class='mt-8'>Self Learning</h2>
  <div class='grid grid-cols-1 gap-4 md:grid-cols-2'>
    {
      selfLearningProjectsData.map((item) => (
        <PublicationEntry
          name={item.name}
          authors={item.authors}
          venue={item.venue}
          year={item.year}
          image={item.image}
          links={item.links}
          details={item.details}
          detailsTitle={item.detailsTitle}
        />
      ))
    }
  </div>

  <Comment slot='bottom' />
</PageLayout>
