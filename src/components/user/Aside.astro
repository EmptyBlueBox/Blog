---
// https://github.com/withastro/starlight/blob/main/packages/starlight/user-components/Aside.astro
import { AstroError } from 'astro/errors'

import { cn } from '@/utils'

const asideVariants = ['note', 'tip', 'caution', 'danger'] as const
const icons = {
  note: 'ui.svg#mingcute-information-line',
  tip: 'aside.svg#mingcute-bulb-line',
  caution: 'aside.svg#mingcute-alert-line',
  danger: 'aside.svg#mingcute-alert-octagon-line'
} as const

interface Props {
  type?: (typeof asideVariants)[number]
  title?: string
}

let { type = 'note', title } = Astro.props

if (!asideVariants.includes(type)) {
  throw new AstroError(
    'Invalid `type` prop passed to the `<Aside>` component.\n',
    `Received: ${JSON.stringify(type)}\n` +
      `Expected one of ${asideVariants.map((i) => JSON.stringify(i)).join(', ')}`
  )
}

if (!title) {
  title = type.toUpperCase()
}

// Define colors for each type
const asideColors = {
  note: {
    border: 'border-l-blue-500',
    bg: 'bg-blue-50 dark:bg-blue-900/20',
    text: 'text-blue-700 dark:text-blue-300',
    icon: 'text-blue-500'
  },
  tip: {
    border: 'border-l-green-500',
    bg: 'bg-green-50 dark:bg-green-900/20',
    text: 'text-green-700 dark:text-green-300',
    icon: 'text-green-500'
  },
  caution: {
    border: 'border-l-yellow-500',
    bg: 'bg-yellow-50 dark:bg-yellow-900/20',
    text: 'text-yellow-700 dark:text-yellow-300',
    icon: 'text-yellow-500'
  },
  danger: {
    border: 'border-l-red-500',
    bg: 'bg-red-50 dark:bg-red-900/20',
    text: 'text-red-700 dark:text-red-300',
    icon: 'text-red-500'
  }
}

const colors = asideColors[type]
---

<aside aria-label={title} class='aside my-3 overflow-hidden rounded-2xl border border-border'>
  <div class={cn('aside-container border-l-8 px-4 py-3', colors.border, colors.bg)}>
    <p
      class={cn('not-prose flex items-center gap-x-2 font-medium', colors.text)}
      aria-hidden='true'
    >
      <svg class={cn('size-6', colors.icon)}>
        <use href={`/icons/${icons[type]}`}></use>
      </svg>
      {title}
    </p>
    <div class='aside-content mt-2'>
      <slot />
    </div>
  </div>
</aside>

<style>
  .aside-content {
    & > :first-child {
      margin-top: 0;
    }
    & > :last-child {
      margin-bottom: 0;
    }
  }
</style>
