---
import '@pagefind/default-ui/css/ui.css'
---

<site-search data-pagefind-ui>
  <aside class='form my-4'>
    <div id='search' />
  </aside>
</site-search>

<script>
  class SiteSearch extends HTMLElement {
    constructor() {
      super()

      const formatURL = (path: string) => path.replace(/(.)\/(#.*)?$/, '$1$2')

      // Use requestIdleCallback to defer loading Pagefind UI
      // until the browser is idle, improving initial page load performance.
      const onIdle = window.requestIdleCallback || ((cb) => setTimeout(cb, 1))

      onIdle(async () => {
        try {
          // @ts-expect-error - Pagefind types might not be available
          const { PagefindUI } = await import('@pagefind/default-ui')
          if (!PagefindUI) {
            console.error('PagefindUI not loaded')
            return
          }

          new PagefindUI({
            element: '#search', // Corrected element ID selector
            baseUrl: import.meta.env.BASE_URL,
            bundlePath: import.meta.env.BASE_URL.replace(/\/?$/, '') + '/pagefind/', // Ensure correct path
            showImages: false, // As per your example
            showSubResults: true, // As per your example
            processResult: (result: { url: string; sub_results: Array<{ url: string }> }) => {
              // Remove trailing slash from URLs for consistency
              result.url = formatURL(result.url)
              if (result.sub_results) {
                result.sub_results = result.sub_results.map((sub) => {
                  sub.url = formatURL(sub.url)
                  return sub
                })
              }
              return result
            },
            // Optional: Customize translations or other options here
             translations: {
               placeholder: "Search this site..." // Example customization
             }
          })
        } catch (error) {
          console.error('Failed to load or initialize Pagefind UI:', error)
        }
      })
    }
  }

  // Ensure the custom element is defined only once
  if (!customElements.get('site-search')) {
    customElements.define('site-search', SiteSearch)
  }
</script>

<style>
  /* Basic Pagefind UI styles */
  [data-pagefind-ui] {
    --pagefind-ui-scale: 0.9; /* Slightly smaller scale */
    --pagefind-ui-primary: hsl(var(--primary));
    --pagefind-ui-text: hsl(var(--foreground));
    --pagefind-ui-background: hsl(var(--background)); /* Use background for the main area */
    --pagefind-ui-border: hsl(var(--border));
    --pagefind-ui-tag: hsl(var(--muted-foreground));
    --pagefind-ui-border-width: 1px; /* Thinner border */
    --pagefind-ui-border-radius: var(--radius); /* Use theme radius */
    --pagefind-ui-image-border-radius: calc(var(--radius) * 0.75); /* Slightly smaller radius for images if shown */
    --pagefind-ui-font: inherit; /* Inherit font from theme */
  }

  /* Style adjustments for better integration */
  [data-pagefind-ui] input[type='text'] {
    border-width: var(--pagefind-ui-border-width);
    border-radius: var(--pagefind-ui-border-radius);
    background-color: hsl(var(--input)); /* Use input background color */
    color: var(--pagefind-ui-text);
    padding: 0.5rem 0.75rem; /* Adjust padding */
  }

  [data-pagefind-ui] input[type='text']:focus {
    border-color: var(--pagefind-ui-primary);
    box-shadow: none; /* Remove default focus shadow if needed */
    outline: 2px solid transparent; /* Consistent focus outline */
     outline-offset: 2px;
  }

  /* Style the results list */
  .pagefind-ui__results-area {
     background-color: hsl(var(--popover)); /* Use popover background for results */
     border: 1px solid var(--pagefind-ui-border);
     border-radius: var(--pagefind-ui-border-radius);
     margin-top: 0.5rem; /* Space between search box and results */
     box-shadow: 0 4px 6px -1px rgb(0 0 0 / 0.1), 0 2px 4px -2px rgb(0 0 0 / 0.1); /* Subtle shadow */
  }

  /* Individual result item */
  .pagefind-ui__result {
    padding: 0.75rem;
    border-bottom: 1px solid var(--pagefind-ui-border);
    transition: background-color 0.2s ease-in-out;
  }
  .pagefind-ui__result:last-child {
    border-bottom: none; /* No border for the last item */
  }
  .pagefind-ui__result:hover {
     background-color: hsl(var(--accent)); /* Use accent color for hover */
  }

  /* Result title */
  .pagefind-ui__result-link {
    color: var(--pagefind-ui-primary);
    text-decoration: none;
    font-weight: 600; /* Bolder title */
  }
  .pagefind-ui__result-link:hover {
    text-decoration: underline;
  }

  /* Result excerpt */
  .pagefind-ui__result-excerpt {
    color: var(--pagefind-ui-text);
    font-size: 0.875rem; /* Slightly smaller excerpt text */
    margin-top: 0.25rem;
  }

  /* Sub-results */
  .pagefind-ui__sub-result {
    margin-top: 0.5rem;
    padding-left: 1rem; /* Indent sub-results */
    border-left: 2px solid var(--pagefind-ui-primary); /* Add a visual indicator */
  }

  .pagefind-ui__sub-result-link {
     color: hsl(var(--secondary-foreground)); /* Different color for sub-links */
     font-size: 0.875rem;
  }

  .pagefind-ui__search-clear {
    /* Optional: Style the clear button if needed */
  }

  /* Loading/No Results states */
  .pagefind-ui__message {
    padding: 1rem;
    color: hsl(var(--muted-foreground));
    text-align: center;
  }
</style>
