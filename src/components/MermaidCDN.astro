---
/**
 * Mermaid processor using CDN for maximum compatibility
 */
---

<!-- Load Mermaid from CDN -->
<script src='https://cdn.jsdelivr.net/npm/mermaid@10.9.1/dist/mermaid.min.js'></script>

<script is:inline>
  ;(function () {
    function initMermaid() {
      if (typeof mermaid === 'undefined') {
        console.error('Mermaid library not loaded')
        return
      }

      // Configure Mermaid
      mermaid.initialize({
        startOnLoad: false,
        theme: 'default',
        themeVariables: {
          primaryColor: '#3b82f6',
          primaryTextColor: '#1f2937',
          primaryBorderColor: '#d1d5db',
          lineColor: '#6b7280',
          secondaryColor: '#f3f4f6',
          tertiaryColor: '#f9fafb'
        }
      })

      // Find all mermaid code blocks
      const codeBlocks = document.querySelectorAll('div[data-language="mermaid"]')
      console.log('Found Mermaid blocks:', codeBlocks.length)

      if (codeBlocks.length === 0) {
        console.log('No Mermaid blocks found')
        return
      }

      codeBlocks.forEach((block, index) => {
        const codeElement = block.querySelector('pre code')
        if (!codeElement) {
          console.log('No code element found in block', index)
          return
        }

        // Extract the mermaid code
        const code = codeElement.textContent || ''
        console.log(`Processing Mermaid block ${index}:`, code.substring(0, 50) + '...')

        // Create container for the diagram
        const container = document.createElement('div')
        container.className = 'mermaid-diagram-wrapper'
        container.style.cssText = `
        margin: 1.5rem 0;
        padding: 1rem;
        border: 1px solid #e5e7eb;
        border-radius: 0.5rem;
        background: #f9fafb;
        text-align: center;
      `

        // Create diagram element
        const diagramDiv = document.createElement('div')
        diagramDiv.id = `mermaid-${Date.now()}-${index}`
        diagramDiv.className = 'mermaid-content'
        container.appendChild(diagramDiv)

        try {
          // Render the diagram
          mermaid
            .render(diagramDiv.id + '-svg', code)
            .then(function (result) {
              diagramDiv.innerHTML = result.svg

              // Make SVG responsive
              const svgElement = diagramDiv.querySelector('svg')
              if (svgElement) {
                svgElement.style.maxWidth = '100%'
                svgElement.style.height = 'auto'
              }

              console.log(`Successfully rendered Mermaid diagram ${index}`)
            })
            .catch(function (error) {
              console.error(`Error rendering Mermaid diagram ${index}:`, error)
              diagramDiv.innerHTML = `
              <div style="color: #dc2626; padding: 1rem; background: #fef2f2; border-radius: 0.25rem;">
                <strong>Mermaid Error:</strong><br>
                <code>${error.message || 'Unknown error'}</code>
              </div>
            `
            })
        } catch (error) {
          console.error(`Error processing Mermaid block ${index}:`, error)
          diagramDiv.innerHTML = `
          <div style="color: #dc2626; padding: 1rem; background: #fef2f2; border-radius: 0.25rem;">
            <strong>Mermaid Processing Error:</strong><br>
            <code>${error.message || 'Unknown error'}</code>
          </div>
        `
        }

        // Replace the original code block
        if (block.parentNode) {
          block.parentNode.replaceChild(container, block)
        }
      })
    }

    // Run when DOM is ready and Mermaid is loaded
    function waitForMermaid() {
      if (typeof mermaid !== 'undefined') {
        initMermaid()
      } else {
        console.log('Waiting for Mermaid to load...')
        setTimeout(waitForMermaid, 100)
      }
    }

    if (document.readyState === 'loading') {
      document.addEventListener('DOMContentLoaded', waitForMermaid)
    } else {
      waitForMermaid()
    }
  })()
</script>

<style>
  .mermaid-diagram-wrapper {
    transition: all 0.3s ease;
  }

  .mermaid-diagram-wrapper:hover {
    border-color: #3b82f6;
    box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1);
  }

  /* Dark mode support */
  @media (prefers-color-scheme: dark) {
    .mermaid-diagram-wrapper {
      background: #1f2937 !important;
      border-color: #374151 !important;
    }
  }

  /* Ensure SVG is properly sized */
  .mermaid-content svg {
    max-width: 100%;
    height: auto;
    display: block;
    margin: 0 auto;
  }
</style>
