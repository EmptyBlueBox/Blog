---
/**
 * Simple Mermaid processor that works with Astro's code highlighting
 */
---

<script is:inline>
  ;(function () {
    // Wait for the page to be fully loaded
    function initMermaid() {
      // Import Mermaid dynamically
      import('mermaid')
        .then((mermaid) => {
          // Configure Mermaid
          mermaid.default.initialize({
            startOnLoad: false,
            theme: 'default',
            themeVariables: {
              primaryColor: '#3b82f6',
              primaryTextColor: '#1f2937',
              primaryBorderColor: '#d1d5db',
              lineColor: '#6b7280',
              secondaryColor: '#f3f4f6',
              tertiaryColor: '#f9fafb'
            }
          })

          // Find all mermaid code blocks
          const codeBlocks = document.querySelectorAll('div[data-language="mermaid"]')
          console.log('Found Mermaid blocks:', codeBlocks.length)

          codeBlocks.forEach((block, index) => {
            const codeElement = block.querySelector('pre code')
            if (!codeElement) return

            // Extract the mermaid code
            const code = codeElement.textContent || ''
            console.log('Processing Mermaid code:', code.substring(0, 50) + '...')

            // Create container for the diagram
            const container = document.createElement('div')
            container.className = 'mermaid-diagram-wrapper'
            container.style.cssText = `
          margin: 1.5rem 0;
          padding: 1rem;
          border: 1px solid #e5e7eb;
          border-radius: 0.5rem;
          background: #f9fafb;
          text-align: center;
        `

            // Create diagram element
            const diagramDiv = document.createElement('div')
            diagramDiv.id = `mermaid-${Date.now()}-${index}`
            container.appendChild(diagramDiv)

            // Render the diagram
            mermaid.default
              .render(diagramDiv.id + '-svg', code)
              .then(({ svg }) => {
                diagramDiv.innerHTML = svg

                // Make SVG responsive
                const svgElement = diagramDiv.querySelector('svg')
                if (svgElement) {
                  svgElement.style.maxWidth = '100%'
                  svgElement.style.height = 'auto'
                }

                console.log('Successfully rendered Mermaid diagram')
              })
              .catch((error) => {
                console.error('Error rendering Mermaid diagram:', error)
                diagramDiv.innerHTML = `
              <div style="color: #dc2626; padding: 1rem; background: #fef2f2; border-radius: 0.25rem;">
                <strong>Mermaid Error:</strong><br>
                <code>${error.message || 'Unknown error'}</code>
              </div>
            `
              })

            // Replace the original code block
            block.parentNode?.replaceChild(container, block)
          })
        })
        .catch((error) => {
          console.error('Failed to load Mermaid:', error)
        })
    }

    // Run when DOM is ready
    if (document.readyState === 'loading') {
      document.addEventListener('DOMContentLoaded', initMermaid)
    } else {
      initMermaid()
    }
  })()
</script>

<style>
  .mermaid-diagram-wrapper {
    transition: all 0.3s ease;
  }

  .mermaid-diagram-wrapper:hover {
    border-color: #3b82f6;
    box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1);
  }

  /* Dark mode support */
  @media (prefers-color-scheme: dark) {
    .mermaid-diagram-wrapper {
      background: #1f2937 !important;
      border-color: #374151 !important;
    }
  }
</style>
