---
import type { ImageMetadata } from 'astro'
import { Image } from 'astro:assets'

import { Collapse } from '@/components/user'
import { cn } from '@/utils'

interface Props {
  class?: string
  project: {
    image?: string
    name: string
    description: string
    links: {
      type: string
      href: string
    }[]
    details?: string
  }[]
}
const { class: className, project: projectsArray, ...props } = Astro.props
const images = import.meta.glob<{ default: ImageMetadata }>(
  '/src/assets/projects/**/*.{jpeg,jpg,png,gif,webp}'
)
---

<div class={cn('animate', className)} {...props}>
  <div class='grid grid-cols-1 gap-x-4 gap-y-3 sm:grid-cols-2 sm:gap-y-4'>
    {
      projectsArray.map((projectItem) => {
        var imagePath = null
        if (projectItem.image) {
          imagePath = '/src/assets/projects/' + projectItem.image
          if (!images[imagePath])
            throw new Error(
              `"${imagePath}" does not exist in glob: "src/assets/projects/*.{jpeg,jpg,png,gif,webp}"`
            )
        }

        return (
          <div class='overflow-hidden rounded-2xl border border-border'>
            <div class='relative'>
              {imagePath && (
                <Image
                  class='absolute end-0 z-0 m-0 h-full w-1/2 object-cover opacity-40'
                  src={images[imagePath]()}
                  alt={projectItem.name}
                  loading='lazy'
                  style={{
                    maskImage:
                      'linear-gradient(to right, rgba(0, 0, 0, 0) 0%, rgba(0, 0, 0, 1) 100%)',
                    msMaskImage:
                      '-ms-linear-gradient(to right, rgba(0, 0, 0, 0) 0%, rgba(0, 0, 0, 1) 100%)',
                    WebkitMaskImage:
                      '-webkit-linear-gradient(to right, rgba(0, 0, 0, 0) 0%, rgba(0, 0, 0, 1) 100%)'
                  }}
                />
              )}
              <div
                class={cn(
                  'relative z-10 flex flex-col gap-y-2 px-3 py-1.5 sm:px-4 sm:py-3',
                  imagePath && 'me-20'
                )}
              >
                <a
                  class='line-clamp-1 font-medium text-foreground no-underline transition-colors'
                  href={projectItem.links[0].href}
                  target='_blank'
                >
                  {projectItem.name}
                </a>
                <div class='line-clamp-2 leading-snug text-muted-foreground sm:h-12'>
                  {projectItem.description}
                </div>
                <div class='flex flex-row items-center gap-x-2 sm:gap-x-3'>
                  {projectItem.links.map((link) => {
                    const iconId =
                      link.type === 'github'
                        ? 'mingcute-github-2-line'
                        : link.type === 'site'
                          ? 'mingcute-earth-2-line'
                          : link.type === 'doc'
                            ? 'mingcute-document-3-line'
                            : link.type === 'release'
                              ? 'mingcute-package-2-line'
                              : link.type === 'arxiv'
                                ? 'mingcute-arxiv-2-line'
                                : link.type === 'slide'
                                  ? 'mingcute-slide-2-line'
                                  : null
                    return (
                      <a
                        href={link.href}
                        class='rounded-full bg-muted p-1 text-muted-foreground transition-colors sm:p-1.5'
                        aria-label={link.type}
                        target='_blank'
                      >
                        <svg class='size-5'>
                          <use href={`/icons/project.svg#${iconId}`} />
                        </svg>
                      </a>
                    )
                  })}
                </div>
              </div>
            </div>
            {projectItem.details && (
              <div class='border-t border-border px-3 py-1.5 sm:px-4 sm:py-3'>
                <Collapse title={`Details: ${projectItem.name}`}>
                  <div class='mt-2 whitespace-pre-line text-sm leading-snug text-muted-foreground'>
                    {projectItem.details}
                  </div>
                </Collapse>
              </div>
            )}
          </div>
        )
      })
    }
  </div>
</div>
